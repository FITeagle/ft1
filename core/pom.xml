<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.fiteagle</groupId>
		<artifactId>fiteagle</artifactId>
		<version>0.1-SNAPSHOT</version>
	</parent>
	<name>FITeagle :: Core</name>
	<artifactId>core</artifactId>
	<build>
	
       
		<plugins>

         	<!-- GIT COMMIT ID PLUGIN CONFIGURATION -->
         <plugin>
				<groupId>com.github.goldin</groupId>
				<artifactId>copy-maven-plugin</artifactId>
				<version>0.2.5</version>
				<executions>
					<execution>
						<id>create-Directories</id>
						<phase>initialize</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<resources>
								<!-- ~~~~~~~~~~~~~~ -->
								<!-- Copy resources -->
								<!-- ~~~~~~~~~~~~~~ -->
								<resource>
									<targetPath>${user.home}${file.separator}fiteagle</targetPath>
									<mkdir>true</mkdir>
									<directory>core/src/main/resources/org/fiteagle/core/certificates</directory>
									<includes>
										<include>jetty-ssl.*</include>
										<include> resourceCertificateStore</include>
									</includes>
								</resource>


							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copyAdapters</id>
						<phase>install</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<resource>
								<targetPath>${user.home}${file.separator}fiteagle/adapters</targetPath>
								<mkdir>true</mkdir>
								<directory>adapter/</directory>
								<include>**/target/*.jar</include>
								<excludes>
									<exclude>common/**</exclude>
									<exclude>**/original-*</exclude>
								</excludes>
							</resource>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<version>2.1.4</version>
				<executions>
					<execution>
						<goals>
							<goal>revision</goal>
						</goals>
					</execution>
				</executions>

				<configuration>
					<!-- that's the default value, you don't have to set it -->
					<prefix>git</prefix>

					<!-- that's the default value -->
					<dateFormat>dd.MM.yyyy '@' HH:mm:ss z</dateFormat>

					<!-- true is default here, it prints some more information during the 
						build -->
					<verbose>true</verbose>

					<!-- If you'd like to tell the plugin where your .git directory is, 
						use this setting, otherwise we'll perform a search trying to figure out the 
						right directory. It's better to add it explicite IMHO. -->
					<dotGitDirectory>${project.basedir}/.git</dotGitDirectory>

					<!-- ALTERNATE SETUP - GENERATE FILE -->
					<!-- If you want to keep git information, even in your WAR file etc, 
						use this mode, which will generate a properties file (with filled out values) 
						which you can then normally read using new Properties().load(/**/) -->

					<!-- this is true by default; You may want to set this to false, if 
						the plugin should run inside a <packaging>pom</packaging> project. Most projects 
						won't need to override this property. For an use-case for this kind of behaviour 
						see: https://github.com/ktoso/maven-git-commit-id-plugin/issues/21 -->
					<skipPoms>true</skipPoms>

					<!-- this is false by default, forces the plugin to generate the git.properties 
						file -->
					<generateGitPropertiesFile>true</generateGitPropertiesFile>

					<!-- The path for the to be generated properties file, it's relative 
						to ${project.basedir} -->
					<generateGitPropertiesFilename>src/main/resources/org/fiteagle/core/config/git.properties</generateGitPropertiesFilename>

					<!-- true by default, controls whether the plugin will fail when no 
						.git directory is found, when set to false the plugin will just skip execution -->
					<!-- @since 2.0.4 -->
					<failOnNoGitDirectory>false</failOnNoGitDirectory>

					<!-- @since 2.1.0 -->
					<!-- read up about git-describe on the in man, or it's homepage - it's 
						a really powerful versioning helper and the recommended way to use git-commit-id-plugin. 
						The configuration bellow is optional, by default describe will run "just 
						like git-describe on the command line", even though it's a JGit reimplementation. -->
					<gitDescribe>

						<!-- don't generate the describe property -->
						<skip>false</skip>

						<!-- if no tag was found "near" this commit, just print the commit's 
							id instead, helpful when you always expect this field to be not-empty -->
						<always>false</always>
						<!-- how many chars should be displayed as the commit object id? 7 
							is git's default, 0 has a special meaning (see end of this README.md), and 
							40 is the maximum value here -->
						<abbrev>7</abbrev>

						<!-- when the build is triggered while the repo is in "dirty state", 
							append this suffix -->
						<dirty>-dirty</dirty>

						<!-- always print using the "tag-commits_from_tag-g_commit_id-maybe_dirty" 
							format, even if "on" a tag. The distance will always be 0 if you're "on" 
							the tag. -->
						<forceLongFormat>false</forceLongFormat>
					</gitDescribe>
				</configuration>

			</plugin>
			<!-- END OF GIT COMMIT ID PLUGIN CONFIGURATION -->
		</plugins>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-antrun-plugin
										</artifactId>
										<versionRange>
											[1.3,)
										</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											com.github.goldin
										</groupId>
										<artifactId>
											copy-maven-plugin
										</artifactId>
										<versionRange>
											[0.2.5,)
										</versionRange>
										<goals>
											<goal>copy</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				
			</plugins>
		</pluginManagement>
	</build>
	<dependencies>
		<dependency>
			<groupId>org.fiteagle</groupId>
			<artifactId>common</artifactId>
			<version>0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.fiteagle.adapter</groupId>
			<artifactId>stopwatch</artifactId>
			<version>0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.xerial</groupId>
			<artifactId>sqlite-jdbc</artifactId>
			<version>3.7.2</version>
		</dependency>
		<dependency>
			<groupId>net.iharder</groupId>
			<artifactId>base64</artifactId>
			<version>2.3.8</version>
		</dependency>

		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcprov-jdk15on</artifactId>
			<version>1.48</version>
		</dependency>
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcpg-jdk15on</artifactId>
			<version>1.48</version>
		</dependency>
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcpkix-jdk15on</artifactId>
			<version>1.48</version>
		</dependency>
		<dependency>
			<groupId>ca.juliusdavies</groupId>
			<artifactId>not-yet-commons-ssl</artifactId>
			<version>0.3.11</version>
		</dependency>
		<dependency>
			<groupId>org.apache.santuario</groupId>
			<artifactId>xmlsec</artifactId>
			<version>1.5.4</version>
		</dependency>		
		<dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-json</artifactId>
      <version>1.17</version>
    </dependency>
    <dependency>
  <groupId>org.clapper</groupId>
  <artifactId>javautil</artifactId>
  <version>3.1.1</version>
</dependency>
	</dependencies>
	<repositories>
  <repository>
    <releases>
      <enabled>true</enabled>
      <updatePolicy>always</updatePolicy>
      <checksumPolicy>warn</checksumPolicy>
    </releases>
    <id>clapper-org-maven-repo</id>
    <name>org.clapper Maven Repo</name>
    <url>http://maven.clapper.org/</url>
    <layout>default</layout>
  </repository>
</repositories>
</project>